name: Distribution

run-name: Distribution action initiated by ${{ github.actor }}

on: workflow_dispatch

# Ensures that only one deployment is in progress
concurrency: ${{ github.workflow }}

jobs:
  core:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    permissions:
      id-token: write # needed to interact with GitHub's OIDC Token endpoint

    # Reference: https://github.com/aws-actions/amazon-ecr-login#login-to-amazon-ecr-public-then-build-and-push-a-docker-image
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Configure AWS credentials üîë
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.DISTRIBUTION_AWS_ROLE }}
          aws-region: us-east-1

      - name: Login to Amazon ECR Public 
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: Build and push Core docker image to Amazon ECR Public
        env:
          REGISTRY: public.ecr.aws
          REGISTRY_ALIAS: ${{ secrets.DISTRIBUTION_REGISTRY_ALIAS }}
          REPOSITORY: core-service
          IMAGE_TAG: ${{ github.sha }}
        run: |
          CORE_IMAGE=$REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
          docker build -t $CORE_IMAGE .
          docker push $CORE_IMAGE
  
  cfn:
    needs: core
    strategy:
      matrix:
        include:
          - region: us-east-2
          - region: us-east-1
          - region: us-west-2
          - region: ap-south-1
          - region: ap-northeast-2
          - region: ap-southeast-1
          - region: ap-southeast-2
          - region: ap-northeast-1
          - region: ca-central-1
          - region: eu-central-1
          - region: eu-west-1
    timeout-minutes: 15
    runs-on: ubuntu-latest
    permissions:
      id-token: write # needed to interact with GitHub's OIDC Token endpoint

    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3 
        with:
          fetch-depth: 2

      - name: Configure AWS credentials üîë
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.DISTRIBUTION_AWS_ROLE }}
          aws-region: us-east-1

      - name: Update CloudFormation template üìÑ
        env:
          REGISTRY: public.ecr.aws
          REGISTRY_ALIAS: ${{ secrets.DISTRIBUTION_REGISTRY_ALIAS }}
          REPOSITORY: core-service
          IMAGE_TAG: ${{ github.sha }}
        run: |
          CORE_IMAGE=$REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG
          node cfn-with-core-image.js $CORE_IMAGE

      - name: Upload CloudFormation template to S3 üìÅ
        env:
          REGION: ${{ matrix.region }}
          S3_BUCKET: ${{ secrets.DISTRIBUTION_S3_BUCKET }}
        run: |
          zip -r cfn-template.zip ./cfn-template-with-core-tag.json
          aws s3api put-object --bucket $S3_BUCKET-$REGION --key cfn-template.zip --body ./cfn-template.zip --region $REGION
