name: Deployment

run-name: Deployment action initiated by ${{ github.actor }}

on:
  push:
    branches:
      - main

# Ensures that only one deployment is in progress
concurrency: ${{ github.workflow }}

jobs:
  deploy:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    permissions:
      id-token: write # needed to interact with GitHub's OIDC Token endpoint
      contents: read
    outputs:
      app_url: ${{ steps.app_url.outputs.app_url }}

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Install Java 🔧
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 17

      - name: Install Node.js 🔧
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn

      - name: Install Dependencies 🔩
        run: yarn install --frozen-lockfile

      - name: Configure AWS credentials 🔑
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.DEPLOYMENT_AWS_ROLE }}
          aws-region: us-west-2

      - name: Deploy CDK 🚀
        run: yarn workspace cdk cdk deploy --all --require-approval never

      - name: Get App URL 🔗
        id: app_url
        run: |
          app_url=$(aws cloudformation describe-stacks --stack-name IotApp --query "Stacks[0].Outputs[?OutputKey=='AppURL'].OutputValue" --output text)
          echo "app_url=$app_url" >> $GITHUB_OUTPUT

  test:
    needs: deploy
    timeout-minutes: 15
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Install Java 🔧
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 17

      - name: Install Node.js 🔧
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn

      - name: Install Dependencies 🔩
        run: yarn install --frozen-lockfile

      - name: Install Playwright Browsers 🔩
        run: yarn playwright install --with-deps

      - name: Run Playwright tests 🧑‍🔬
        env:
          ENDPOINT: ${{ needs.deploy.outputs.app_url }}
          LAUNCH_WEB_SERVER: false
          USER_PASSWORD: ${{ secrets.DEPLOYMENT_USER_PASSWORD }}
        id: tests
        run: yarn playwright test

      - name: Store Test Artifacts on Failure 🥲
        if: failure() && steps.tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
